@import '../../../node_modules/compass-mixins/lib/compass';
@import '../../../node_modules/mathsass/dist/math';

.radial-overlay {
	width: 100%;
	height: 100%;
	background-color: rgba(0, 0, 0, 0.6);
	position: fixed;
	top: 0;
	left: 0;
	display: none;
	opacity: 0;
	transition: opacity 0.3s ease;
	z-index: 110;
	pointer-events: none;
	&.active {
		pointer-events: auto;
		opacity: 1;
		display: block;
	}
}

.radial-menu {
	position: absolute;
	left: 0;
	top: 0;
	list-style-type: none;
	margin: 0;
	padding: 0;
	pointer-events: none;
	z-index: 110;

	$radial_width: 60;
	> li {
		position: absolute;
		left: 0;
		top: 0;
		width: #{$radial_width}px;
		height: #{$radial_width}px;
		line-height: #{$radial_width}px;
		.fa-3x {
			line-height: 60px;
		}
		font-size: 0.7em;
		display: inline-block;
		text-align: center;
		border-radius: 50%;
		background-color: #e74c3c;
		color: #fff;
		box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.51);
		pointer-events: none;

		@include transition(all 0.6s);
		transform: scale(0, 0);

		&.disabled {
			opacity: 0.5;
		}
	}

	&.active {
		> li {
			pointer-events: initial;
			&[data-type] {
				cursor: pointer;
			}
			transform: scale(1, 1);
		}
		$distance: $radial_width * 1.5;
		$n: 6;
		@for $i from 0 to $n {
			> li:nth-child(#{$i + 1}) {
				$angle: $i * $PI/($n/2);
				left: #{-$distance * cos($angle)}px;
				top: #{-$distance * sin($angle)}px;
			}
		}
	}
}
